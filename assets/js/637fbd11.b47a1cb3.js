"use strict";(self.webpackChunkconductor=self.webpackChunkconductor||[]).push([[385],{8213:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});var t=i(4848),s=i(8453);const c={title:"include()",id:"include"},o=void 0,r={id:"directives/include",title:"include()",description:'The include() directive allows you to "include" a separate file in a COND',source:"@site/docs/directives/include.md",sourceDirName:"directives",slug:"/directives/include",permalink:"/conductor/directives/include",draft:!1,unlisted:!1,editUrl:"https://github.com/geoffxy/conductor/edit/master/website/docs/directives/include.md",tags:[],version:"current",frontMatter:{title:"include()",id:"include"},sidebar:"docs",previous:{title:"Directives",permalink:"/conductor/directives"},next:{title:"Command Line Interface",permalink:"/conductor/cli"}},d={},l=[{value:"Arguments",id:"arguments",level:2},{value:"<code>path</code>",id:"path",level:3},{value:"Usage Example",id:"usage-example",level:2}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"include(path)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"include()"}),' directive allows you to "include" a separate file in a ',(0,t.jsx)(n.code,{children:"COND"}),"\nfile. The primary use case for ",(0,t.jsx)(n.code,{children:"include()"})," is when you want to share common\nconfiguration values among multiple ",(0,t.jsx)(n.code,{children:"COND"})," files (for use across multiple task\ndefinitions). You can define the configuration values in a single file, and then\n",(0,t.jsx)(n.code,{children:"include()"})," that file in every relevant ",(0,t.jsx)(n.code,{children:"COND"})," file."]}),"\n",(0,t.jsxs)(n.p,{children:["When encountering an ",(0,t.jsx)(n.code,{children:"include()"})," directive, Conductor will interpret the\nincluded file as a Python program. Any symbols (e.g., variables, functions)\ndefined in the included file will be usable inside the ",(0,t.jsx)(n.code,{children:"COND"})," file. A ",(0,t.jsx)(n.code,{children:"COND"}),"\nfile can ",(0,t.jsx)(n.code,{children:"include()"})," as many other files as needed. Note that ",(0,t.jsx)(n.code,{children:"include()"}),"\ndirectives are processed in the order they are written in the ",(0,t.jsx)(n.code,{children:"COND"})," file (i.e.,\nfrom top to bottom)."]}),"\n",(0,t.jsxs)(n.p,{children:["Included files are meant to be used to share configuration values. As a result,\nincluded files cannot ",(0,t.jsx)(n.code,{children:"include()"})," other files (i.e., nested ",(0,t.jsx)(n.code,{children:"include()"}),"s are not\nsupported). An included file also cannot define any tasks. Included files must\nalso be ",(0,t.jsx)(n.em,{children:"deterministic"})," (i.e., they must always produce the same results each\ntime they are evaluated). These restrictions are meant to keep ",(0,t.jsx)(n.code,{children:"include()"}),"\ndirectives simple to reason about."]}),"\n",(0,t.jsx)(n.h2,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsx)(n.h3,{id:"path",children:(0,t.jsx)(n.code,{children:"path"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Type:"})," String (required)"]}),"\n",(0,t.jsxs)(n.p,{children:["The path to the file to include, which will be interpreted as a Python program.\nTo distinguish Conductor includes from regular Python programs, all included\nfiles must have a ",(0,t.jsx)(n.code,{children:".cond"})," extension."]}),"\n",(0,t.jsxs)(n.p,{children:["Paths can be specified either (i) relative to the ",(0,t.jsx)(n.code,{children:"COND"})," file's location, or\n(ii) relative to the project root. To specify a path relative to the project\nroot, use ",(0,t.jsx)(n.code,{children:"//"})," to indicate the project root (see the usage example below)."]}),"\n",(0,t.jsx)(n.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,t.jsxs)(n.p,{children:["In the example below, we define two ",(0,t.jsx)(n.code,{children:"run_experiment()"})," tasks in separate ",(0,t.jsx)(n.code,{children:"COND"}),"\nfiles. However, both tasks share configuration values that are defined in\n",(0,t.jsx)(n.code,{children:"common.cond"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"title=experiments/common.cond",children:"# Common configuration values.\nREPETITIONS = 3\nTHREADS = 2 * 8\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"title=experiments/baseline/COND {2}",children:'# Include `common.cond` using a relative path.\ninclude("../common.cond")\n\nrun_experiment(\n  name="baseline",\n  run="./evaluate_baseline.sh",\n  options={\n    "repetitions": REPETITIONS,\n    "threads": THREADS,\n  },\n)\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"title=experiments/new_system/COND {2}",children:'# Include `common.cond` using a path relative to the project root.\ninclude("//experiments/common.cond")\n\nrun_experiment(\n  name="new_system",\n  run="./evaluate_new_system.sh",\n  options={\n    "repetitions": REPETITIONS,\n    "threads": THREADS,\n  },\n)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},c=t.createContext(s);function o(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);