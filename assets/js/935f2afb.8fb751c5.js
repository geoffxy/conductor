"use strict";(self.webpackChunkconductor=self.webpackChunkconductor||[]).push([[581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Overview","href":"/conductor/","docId":"overview","unlisted":false},{"type":"category","label":"Reference","collapsible":false,"items":[{"type":"category","label":"Task Types","collapsed":false,"items":[{"type":"link","label":"run_experiment()","href":"/conductor/task-types/run-experiment","docId":"task-types/run-experiment","unlisted":false},{"type":"link","label":"run_command()","href":"/conductor/task-types/run-command","docId":"task-types/run-command","unlisted":false},{"type":"link","label":"combine()","href":"/conductor/task-types/combine","docId":"task-types/combine","unlisted":false},{"type":"link","label":"group()","href":"/conductor/task-types/group","docId":"task-types/group","unlisted":false},{"type":"link","label":"run_experiment_group()","href":"/conductor/task-types/run-experiment-group","docId":"task-types/run-experiment-group","unlisted":false}],"collapsible":true,"href":"/conductor/task-types"},{"type":"category","label":"Directives","collapsed":false,"items":[{"type":"link","label":"include()","href":"/conductor/directives/include","docId":"directives/include","unlisted":false}],"collapsible":true,"href":"/conductor/directives"},{"type":"category","label":"Command Line Interface","collapsed":false,"items":[{"type":"link","label":"Run","href":"/conductor/cli/run","docId":"cli/run","unlisted":false},{"type":"link","label":"Archive","href":"/conductor/cli/archive","docId":"cli/archive","unlisted":false},{"type":"link","label":"Restore","href":"/conductor/cli/restore","docId":"cli/restore","unlisted":false},{"type":"link","label":"Where","href":"/conductor/cli/where","docId":"cli/where","unlisted":false},{"type":"link","label":"Clean","href":"/conductor/cli/clean","docId":"cli/clean","unlisted":false},{"type":"link","label":"Garbage Collect (GC)","href":"/conductor/cli/gc","docId":"cli/gc","unlisted":false}],"collapsible":true,"href":"/conductor/cli"},{"type":"link","label":"Configuration","href":"/conductor/configuration","docId":"configuration","unlisted":false},{"type":"link","label":"Python Support Library","href":"/conductor/python-support-library","docId":"python-support-library","unlisted":false}],"collapsed":false}]},"docs":{"cli":{"id":"cli","title":"Command Line Interface","description":"The primary way you interact with Conductor is through your terminal, using","sidebar":"docs"},"cli/archive":{"id":"cli/archive","title":"Archive","description":"Conductor\'s archive functionality provides a convenient way to back up the task","sidebar":"docs"},"cli/clean":{"id":"cli/clean","title":"Clean","description":"Removes Conductor\'s generated files, including task outputs. In practice, this","sidebar":"docs"},"cli/gc":{"id":"cli/gc","title":"Garbage Collect (GC)","description":"Removes failed experiment task output directories. This subcommand will traverse","sidebar":"docs"},"cli/restore":{"id":"cli/restore","title":"Restore","description":"Restore the task outputs from an archive file that was generated using `cond","sidebar":"docs"},"cli/run":{"id":"cli/run","title":"Run","description":"Runs the task identified by task_identifier, along with its dependencies.","sidebar":"docs"},"cli/where":{"id":"cli/where","title":"Where","description":"This command prints the path to where the specified task\'s outputs are stored.","sidebar":"docs"},"configuration":{"id":"configuration","title":"Configuration","description":"Every Conductor project contains a cond_config.toml file, which marks the","sidebar":"docs"},"directives":{"id":"directives","title":"Directives","description":"Directives are special \\"functions\\" that can be used in COND files. The","sidebar":"docs"},"directives/include":{"id":"directives/include","title":"include()","description":"The include() directive allows you to \\"include\\" a separate file in a COND","sidebar":"docs"},"overview":{"id":"overview","title":"Overview","description":"Conductor is a simple and elegant tool that helps orchestrate your research","sidebar":"docs"},"python-support-library":{"id":"python-support-library","title":"Python Support Library","description":"Conductor includes a Python library that provides utilities for tasks that are","sidebar":"docs"},"task-types":{"id":"task-types","title":"Task Types","description":"The subpages in this section describe Conductor\'s task types in detail. This","sidebar":"docs"},"task-types/combine":{"id":"task-types/combine","title":"combine()","description":"A combine() task copies the output files of its dependencies into a single","sidebar":"docs"},"task-types/group":{"id":"task-types/group","title":"group()","description":"The purpose of a group() task is to \\"assign\\" a task identifier to a group of","sidebar":"docs"},"task-types/run-command":{"id":"task-types/run-command","title":"run_command()","description":"A run_command() task runs the command specified in the run argument. The","sidebar":"docs"},"task-types/run-experiment":{"id":"task-types/run-experiment","title":"run_experiment()","description":"A run_experiment() task runs the command specified in the run argument. The","sidebar":"docs"},"task-types/run-experiment-group":{"id":"task-types/run-experiment-group","title":"run_experiment_group()","description":"A runexperimentgroup() task lets you specify a list of experiments that","sidebar":"docs"}}}')}}]);