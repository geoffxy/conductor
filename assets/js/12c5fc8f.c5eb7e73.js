"use strict";(self.webpackChunkconductor=self.webpackChunkconductor||[]).push([[511],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,f=p["".concat(c,".").concat(m)]||p[m]||s[m]||i;return n?r.createElement(f,a(a({ref:t},d),{},{components:n})):r.createElement(f,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6258:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={title:"Garbage Collect (GC)",id:"gc"},c=void 0,u={unversionedId:"cli/gc",id:"cli/gc",title:"Garbage Collect (GC)",description:"Removes failed experiment task output directories. This subcommand will traverse",source:"@site/docs/cli/gc.md",sourceDirName:"cli",slug:"/cli/gc",permalink:"/conductor/cli/gc",editUrl:"https://github.com/geoffxy/conductor/edit/master/website/docs/cli/gc.md",tags:[],version:"current",frontMatter:{title:"Garbage Collect (GC)",id:"gc"},sidebar:"docs",previous:{title:"Clean",permalink:"/conductor/cli/clean"},next:{title:"Configuration",permalink:"/conductor/configuration"}},d=[{value:"Optional Arguments",id:"optional-arguments",children:[{value:"<code>-n</code> or <code>--dry-run</code>",id:"-n-or---dry-run",children:[],level:3},{value:"<code>-v</code> or <code>--verbose</code>",id:"-v-or---verbose",children:[],level:3},{value:"<code>-h</code> or <code>--help</code>",id:"-h-or---help",children:[],level:3}],level:2},{value:"Usage Examples",id:"usage-examples",children:[],level:2}],s={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cond gc [-h] [-n] [-v]\n")),(0,i.kt)("p",null,"Removes failed experiment task output directories. This subcommand will traverse\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"cond-out"),' directory and will delete all experiment task outputs that are\nassociated with a failed task. A task is treated as "failed" if its exit code is\nnot 0.'),(0,i.kt)("h2",{id:"optional-arguments"},"Optional Arguments"),(0,i.kt)("h3",{id:"-n-or---dry-run"},(0,i.kt)("inlineCode",{parentName:"h3"},"-n")," or ",(0,i.kt)("inlineCode",{parentName:"h3"},"--dry-run")),(0,i.kt)("p",null,"If this flag is set, Conductor will not actually remove anything. Instead, it\nwill print the output directories that it would have removed."),(0,i.kt)("h3",{id:"-v-or---verbose"},(0,i.kt)("inlineCode",{parentName:"h3"},"-v")," or ",(0,i.kt)("inlineCode",{parentName:"h3"},"--verbose")),(0,i.kt)("p",null,"Print all the experiment output directories that are being removed."),(0,i.kt)("h3",{id:"-h-or---help"},(0,i.kt)("inlineCode",{parentName:"h3"},"-h")," or ",(0,i.kt)("inlineCode",{parentName:"h3"},"--help")),(0,i.kt)("p",null,"Prints a help message that provides details about how to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"cond clean"),"\nsubcommand."),(0,i.kt)("h2",{id:"usage-examples"},"Usage Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Removes all failed experiment task output directories.\n$ cond gc\n")))}p.isMDXComponent=!0}}]);