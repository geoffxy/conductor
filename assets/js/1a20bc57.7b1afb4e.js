"use strict";(self.webpackChunkconductor=self.webpackChunkconductor||[]).push([[468],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||s[m]||i;return t?r.createElement(f,a(a({ref:n},d),{},{components:t})):r.createElement(f,a({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7905:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={title:"Command Line Interface",id:"cli"},l=void 0,u={unversionedId:"cli",id:"cli",title:"Command Line Interface",description:"The primary way you interact with Conductor is through your terminal, using",source:"@site/docs/cli.md",sourceDirName:".",slug:"/cli",permalink:"/conductor/cli",editUrl:"https://github.com/geoffxy/conductor/edit/master/website/docs/cli.md",tags:[],version:"current",frontMatter:{title:"Command Line Interface",id:"cli"},sidebar:"docs",previous:{title:"run_experiment_group()",permalink:"/conductor/task-types/run-experiment-group"},next:{title:"Run",permalink:"/conductor/cli/run"}},d=[{value:"<code>cond</code> Options",id:"cond-options",children:[{value:"Usage",id:"usage",children:[],level:4},{value:"<code>-v</code> or <code>--version</code>",id:"-v-or---version",children:[],level:3},{value:"<code>-h</code> or <code>--help</code>",id:"-h-or---help",children:[],level:3}],level:2}],s={toc:d};function p(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The primary way you interact with Conductor is through your terminal, using\nConductor's command line interface. After ",(0,i.kt)("a",{parentName:"p",href:"/conductor/"},"installing Conductor"),",\nyou will be able to access Conductor by running the ",(0,i.kt)("inlineCode",{parentName:"p"},"cond")," program in your\nshell."),(0,i.kt)("p",null,"Similar to other command line tools like Git, Conductor organizes its\nfunctionality into subcommands. The pages in this section provide details about\neach of Conductor's subcommands."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/conductor/cli/run"},(0,i.kt)("inlineCode",{parentName:"a"},"cond run")),": Run a Conductor task"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/conductor/cli/archive"},(0,i.kt)("inlineCode",{parentName:"a"},"cond archive")),": Create archives of task outputs"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/conductor/cli/restore"},(0,i.kt)("inlineCode",{parentName:"a"},"cond restore")),": Restore results from an archive generated\nby ",(0,i.kt)("inlineCode",{parentName:"li"},"cond archive")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/conductor/cli/clean"},(0,i.kt)("inlineCode",{parentName:"a"},"cond clean")),": Remove Conductor's output files")),(0,i.kt)("h2",{id:"cond-options"},(0,i.kt)("inlineCode",{parentName:"h2"},"cond")," Options"),(0,i.kt)("p",null,"As described above, Conductor's functionality is meant to be accessed using\nsubcommands. However there are a few arguments you can pass to ",(0,i.kt)("inlineCode",{parentName:"p"},"cond")," without a\nsubcommand. Running ",(0,i.kt)("inlineCode",{parentName:"p"},"cond")," without any arguments is equivalent to running ",(0,i.kt)("inlineCode",{parentName:"p"},"cond\n--help"),"."),(0,i.kt)("h4",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ cond [-h] [-v]\n")),(0,i.kt)("h3",{id:"-v-or---version"},(0,i.kt)("inlineCode",{parentName:"h3"},"-v")," or ",(0,i.kt)("inlineCode",{parentName:"h3"},"--version")),(0,i.kt)("p",null,"Prints Conductor's version and exits. Conductor uses ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org"},"semantic\nversioning"),"."),(0,i.kt)("h3",{id:"-h-or---help"},(0,i.kt)("inlineCode",{parentName:"h3"},"-h")," or ",(0,i.kt)("inlineCode",{parentName:"h3"},"--help")),(0,i.kt)("p",null,"Prints a help message that provides details about how to use Conductor's command\nline interface."))}p.isMDXComponent=!0}}]);