"use strict";(self.webpackChunkconductor=self.webpackChunkconductor||[]).push([[337],{4910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(4848),r=n(8453);const s={title:"Python Support Library",id:"python-support-library"},o=void 0,a={id:"python-support-library",title:"Python Support Library",description:"Conductor includes a Python library that provides utilities for tasks that are",source:"@site/docs/python-support-library.md",sourceDirName:".",slug:"/python-support-library",permalink:"/conductor/python-support-library",draft:!1,unlisted:!1,editUrl:"https://github.com/geoffxy/conductor/edit/master/website/docs/python-support-library.md",tags:[],version:"current",frontMatter:{title:"Python Support Library",id:"python-support-library"},sidebar:"docs",previous:{title:"Configuration",permalink:"/conductor/configuration"}},c={},d=[{value:"Path Utilities",id:"path-utilities",level:2},{value:"<code>get_deps_paths()</code>",id:"get_deps_paths",level:3},{value:"<code>get_output_path()</code>",id:"get_output_path",level:3},{value:"Usage Example",id:"usage-example",level:2},{value:"<code>in_output_dir()</code>",id:"in_output_dir",level:3},{value:"<code>where()</code>",id:"where",level:3}];function h(e){const t={admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Conductor includes a Python library that provides utilities for tasks that are\nimplemented as Python scripts. For example, you might use a Python script to\nprocess experiment results, transform data, or create figures. As long as you\nhave installed Conductor, you can access the Python library by importing\n",(0,i.jsx)(t.code,{children:"conductor.lib"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"import conductor.lib as cond\n"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The functions in this library are meant to be called in scripts that are\nlaunched by Conductor. If used in scripts that are ",(0,i.jsx)(t.em,{children:"not"})," launched by Conductor,\nthese library functions will raise ",(0,i.jsx)(t.code,{children:"RuntimeError"})," exceptions."]})}),"\n",(0,i.jsx)(t.h2,{id:"path-utilities",children:"Path Utilities"}),"\n",(0,i.jsx)(t.h3,{id:"get_deps_paths",children:(0,i.jsx)(t.code,{children:"get_deps_paths()"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def get_deps_paths() -> List[pathlib.Path]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns a list of this task's dependencies' output paths. If the task has no\ndependencies, the returned list will be empty."}),"\n",(0,i.jsx)(t.h3,{id:"get_output_path",children:(0,i.jsx)(t.code,{children:"get_output_path()"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def get_output_path() -> pathlib.Path\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the path where this task should write its output files."}),"\n",(0,i.jsx)(t.h2,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(t.p,{children:"The following code snippets provide an example of how you can use Conductor's\nPython library to retrieve the location of dependent tasks' outputs as well as\nthe task's output path."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:'title="COND"',children:'run_experiment(\n  name="benchmark_1",\n  run="./run_benchmark_1.sh",\n)\n\nrun_experiment(\n  name="benchmark_2",\n  run="./run_benchmark_2.sh",\n)\n\nrun_command(\n  name="combine",\n  run="python combine_results.py",\n  deps=[\n    ":benchmark_1",\n    ":benchmark_2",\n  ],\n)\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",metastring:'title="combine_results.py" {10,16}',children:'import conductor.lib as cond\nimport pandas as pd\n\n\ndef main():\n    """\n    Combines the CSV files written by this task\'s dependencies.\n    """\n    results = []\n    deps = cond.get_deps_paths()\n\n    for dep_path in deps:\n        results.append(pd.read_csv(dep_path / "measurements.csv"))\n    combined = pd.concat(results, ignore_index=True)\n\n    out_dir = cond.get_output_path()\n    combined.to_csv(out_dir / "combined.csv", index=False)\n\n\nif __name__ == "__main__":\n    main()\n'})}),"\n",(0,i.jsx)(t.h3,{id:"in_output_dir",children:(0,i.jsx)(t.code,{children:"in_output_dir()"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def in_output_dir(file_path: path.Path | str) -> pathlib.Path\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If the current script is being run by Conductor, this function amends\n",(0,i.jsx)(t.code,{children:"file_path"})," to make it fall under where Conductor's task outputs should be\nstored. Otherwise, this function returns ",(0,i.jsx)(t.code,{children:"file_path"})," unchanged (but as a\n",(0,i.jsx)(t.code,{children:"pathlib.Path"}),")."]}),"\n",(0,i.jsxs)(t.p,{children:["This is meant to be useful for scripts that may be run independently of\nConductor. Note that ",(0,i.jsx)(t.code,{children:"file_path"})," should be a relative path."]}),"\n",(0,i.jsx)(t.h3,{id:"where",children:(0,i.jsx)(t.code,{children:"where()"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def where(\n    identifier: str,\n    relative_to_project_root: bool = False,\n    non_existent_ok: bool = False,\n) -> Optional[pathlib.Path]\n"})}),"\n",(0,i.jsx)(t.p,{children:"Returns the output location path of the given task identifier. This function\nwill only work when executed from inside a Conductor project (i.e., in a path\nthat is under the project root). This function is useful when retrieving\nexperimental results in scripts or notebooks."}),"\n",(0,i.jsxs)(t.p,{children:["If this function returns ",(0,i.jsx)(t.code,{children:"None"}),", it indicates no output location is available\n(e.g., the task has not run before)."]}),"\n",(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"relative_to_project_root"})," is set to ",(0,i.jsx)(t.code,{children:"True"}),", this will return a relative path\nto the project root. Otherwise, it returns an absolute path."]}),"\n",(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"non_existent_ok"})," is set to ",(0,i.jsx)(t.code,{children:"True"}),", this will return the task's output path\neven if the path does not yet exist."]})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);